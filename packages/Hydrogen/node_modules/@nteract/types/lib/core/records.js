"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CommsRecord = exports.DocumentRecord = exports.makeAppRecord = undefined;

var _immutable = require("immutable");

var Immutable = require("immutable");

/*

This is the definition of JSON that Flow provides

type JSON = | string | number | boolean | null | JSONObject | JSONArray;
type JSONObject = { [key:string]: JSON };
type JSONArray = Array<JSON>;

Which we'll adapt for our use of Immutable.js

*/

// eslint-disable-line no-use-before-define


// Note: this is the kernelspec as formed by spawnteract and jupyter kernelspecs --json


// Parts of AppRecord should become
// ElectronAppRecord
// Basically, anything that's only for desktop should have its own record & reducers
var makeAppRecord = exports.makeAppRecord = (0, _immutable.Record)({
  executionState: "not connected",
  token: null, // Electron specific (ish...)
  channels: null, // Electron, though we hope to adapt these...
  spawn: null, // Very Electron
  connectionFile: null, // Electron
  notificationSystem: null, // Should be available for all I assume
  kernelSpecName: null, // All
  kernelSpecDisplayName: null, // All
  kernelSpec: null, // All
  isSaving: false, // All -- ?
  lastSaved: null, // All
  configLastSaved: null, // ?
  error: null // All
});
var DocumentRecord = exports.DocumentRecord = Immutable.Record({
  notebook: null,
  savedNotebook: null,
  // $FlowFixMe: Immutable
  transient: new Immutable.Map({
    keyPathsForDisplays: new Immutable.Map()
  }),
  cellPagers: new Immutable.Map(),
  stickyCells: new Immutable.Set(),
  editorFocused: null,
  cellFocused: null,
  copied: new Immutable.Map(),
  filename: ""
});

var CommsRecord = exports.CommsRecord = Immutable.Record({
  targets: new Immutable.Map(),
  info: new Immutable.Map(),
  models: new Immutable.Map()
});